{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daim\\\\Desktop\\\\Reat Meal\\\\src\\\\store\\\\ContextProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport ContextObj from \"./ContextObj\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst reducer = (state, actions) => {\n  if (actions.type === \"ADD\") {\n    const totalAmount = state.totalAmount + actions.item.price * actions.item.amount;\n    const findItem = state.items.find(item => item.id === actions.item.id);\n\n    if (!findItem) {\n      return {\n        items: { ...state.items,\n          findItem\n        },\n        totalAmount\n      };\n    } else {\n      const addExistingAndArray = state.items.map(item => {\n        if (item.id === actions.item.id) {\n          return item.amount + actions.item.amount;\n        }\n\n        return item;\n      });\n      return {\n        items: {\n          addExistingAndArray\n        },\n        totalAmount\n      };\n    }\n  }\n\n  return state;\n};\n\nconst ContextProvider = props => {\n  _s();\n\n  const [state, setState] = React.useReducer(reducer, defaultState);\n\n  const addItem = item => {\n    setState({\n      type: \"ADD\",\n      item\n    });\n  };\n\n  const removeItem = () => {};\n\n  const store = { ...state,\n    addItem,\n    removeItem\n  };\n  return /*#__PURE__*/_jsxDEV(ContextObj.Provider, {\n    value: store,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"txVEgAPgYq0FBgMRvvuEy56bcnI=\");\n\n_c = ContextProvider;\nexport default ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["C:/Users/Daim/Desktop/Reat Meal/src/store/ContextProvider.jsx"],"names":["React","ContextObj","defaultState","items","totalAmount","reducer","state","actions","type","item","price","amount","findItem","find","id","addExistingAndArray","map","ContextProvider","props","setState","useReducer","addItem","removeItem","store","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAClC,MAAIA,OAAO,CAACC,IAAR,KAAiB,KAArB,EAA4B;AAC1B,UAAMJ,WAAW,GACfE,KAAK,CAACF,WAAN,GAAoBG,OAAO,CAACE,IAAR,CAAaC,KAAb,GAAqBH,OAAO,CAACE,IAAR,CAAaE,MADxD;AAEA,UAAMC,QAAQ,GAAGN,KAAK,CAACH,KAAN,CAAYU,IAAZ,CAAkBJ,IAAD,IAAUA,IAAI,CAACK,EAAL,KAAYP,OAAO,CAACE,IAAR,CAAaK,EAApD,CAAjB;;AACA,QAAI,CAACF,QAAL,EAAe;AACb,aAAO;AAAET,QAAAA,KAAK,EAAE,EAAE,GAAGG,KAAK,CAACH,KAAX;AAAkBS,UAAAA;AAAlB,SAAT;AAAuCR,QAAAA;AAAvC,OAAP;AACD,KAFD,MAEO;AACL,YAAMW,mBAAmB,GAAGT,KAAK,CAACH,KAAN,CAAYa,GAAZ,CAAiBP,IAAD,IAAU;AACpD,YAAIA,IAAI,CAACK,EAAL,KAAYP,OAAO,CAACE,IAAR,CAAaK,EAA7B,EAAiC;AAC/B,iBAAOL,IAAI,CAACE,MAAL,GAAcJ,OAAO,CAACE,IAAR,CAAaE,MAAlC;AACD;;AACD,eAAOF,IAAP;AACD,OAL2B,CAA5B;AAMA,aAAO;AAAEN,QAAAA,KAAK,EAAE;AAAEY,UAAAA;AAAF,SAAT;AAAkCX,QAAAA;AAAlC,OAAP;AACD;AACF;;AACD,SAAOE,KAAP;AACD,CAlBD;;AAmBA,MAAMW,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAM,CAACZ,KAAD,EAAQa,QAAR,IAAoBnB,KAAK,CAACoB,UAAN,CAAiBf,OAAjB,EAA0BH,YAA1B,CAA1B;;AACA,QAAMmB,OAAO,GAAIZ,IAAD,IAAU;AACxBU,IAAAA,QAAQ,CAAC;AAAEX,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA;AAAf,KAAD,CAAR;AACD,GAFD;;AAGA,QAAMa,UAAU,GAAG,MAAM,CAAE,CAA3B;;AACA,QAAMC,KAAK,GAAG,EACZ,GAAGjB,KADS;AAEZe,IAAAA,OAFY;AAGZC,IAAAA;AAHY,GAAd;AAKA,sBACE,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAEC,KAA5B;AAAA,cAAoCL,KAAK,CAACM;AAA1C;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAdD;;GAAMP,e;;KAAAA,e;AAgBN,eAAeA,eAAf","sourcesContent":["import React from \"react\";\r\nimport ContextObj from \"./ContextObj\";\r\n\r\nconst defaultState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\nconst reducer = (state, actions) => {\r\n  if (actions.type === \"ADD\") {\r\n    const totalAmount =\r\n      state.totalAmount + actions.item.price * actions.item.amount;\r\n    const findItem = state.items.find((item) => item.id === actions.item.id);\r\n    if (!findItem) {\r\n      return { items: { ...state.items, findItem }, totalAmount };\r\n    } else {\r\n      const addExistingAndArray = state.items.map((item) => {\r\n        if (item.id === actions.item.id) {\r\n          return item.amount + actions.item.amount;\r\n        }\r\n        return item;\r\n      });\r\n      return { items: { addExistingAndArray }, totalAmount };\r\n    }\r\n  }\r\n  return state;\r\n};\r\nconst ContextProvider = (props) => {\r\n  const [state, setState] = React.useReducer(reducer, defaultState);\r\n  const addItem = (item) => {\r\n    setState({ type: \"ADD\", item });\r\n  };\r\n  const removeItem = () => {};\r\n  const store = {\r\n    ...state,\r\n    addItem,\r\n    removeItem,\r\n  };\r\n  return (\r\n    <ContextObj.Provider value={store}>{props.children}</ContextObj.Provider>\r\n  );\r\n};\r\n\r\nexport default ContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}